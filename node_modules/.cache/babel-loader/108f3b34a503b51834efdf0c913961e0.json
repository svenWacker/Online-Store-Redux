{"ast":null,"code":"import allProductsJson from \"../data.json\";\n\nconst allReducers = (state = {}, action) => {\n  const {\n    cart,\n    products\n  } = state;\n  const {\n    product\n  } = action;\n  const {\n    id,\n    productName,\n    price,\n    icon\n  } = product || {};\n  let quantity, inventory, newCart;\n\n  switch (action.type) {\n    case \"ADD_PRODUCT\":\n      quantity = cart[id] ? cart[id].quantity : 0;\n      inventory = product.inventory > 0 ? product.inventory - 1 : product.inventory;\n      return { ...state,\n        products: { ...products,\n          [id]: { ...product,\n            inventory\n          }\n        },\n        cart: { ...cart,\n          [id]: {\n            id,\n            productName,\n            price,\n            icon,\n            quantity: quantity + 1\n          }\n        }\n      };\n\n    case \"CHECKOUT\":\n      console.log(\"Thank you for spending all your money with us, see you soon ðŸ˜‰\"); // Not ready yet\n\n      return {\n        products: allProductsJson,\n        cart: {}\n      };\n\n    case \"REMOVE_ONE\":\n      inventory = products[id].inventory;\n      quantity = product.quantity;\n      newCart = { ...cart\n      };\n      delete newCart[id];\n      return { ...state,\n        cart: quantity > 1 ? { ...cart,\n          [id]: { ...product,\n            quantity: quantity - 1\n          }\n        } : newCart,\n        products: { ...products,\n          [id]: { ...product,\n            inventory: inventory + 1\n          }\n        }\n      };\n\n    case \"REMOVE_ALL\":\n      inventory = products[id].inventory;\n      quantity = product.quantity;\n      newCart = { ...cart\n      };\n      delete newCart[id];\n      return { ...state,\n        products: { ...products,\n          [id]: { ...product,\n            inventory: inventory + quantity\n          }\n        },\n        cart: newCart\n      };\n\n    case \"EMPTY_CART\":\n      return {\n        products: allProductsJson,\n        cart: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default allReducers;","map":{"version":3,"sources":["/home/dci/app/WebDev/Online-Store-Redux/src/reducers/index.js"],"names":["allProductsJson","allReducers","state","action","cart","products","product","id","productName","price","icon","quantity","inventory","newCart","type","console","log"],"mappings":"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","sourcesContent":["import allProductsJson from \"../data.json\";\nconst allReducers = (state = {}, action) => {\n  const { cart, products } = state;\n  const { product } = action;\n  const { id, productName, price, icon } = product || {};\n  let quantity, inventory, newCart;\n\n  switch (action.type) {\n    case \"ADD_PRODUCT\":\n      quantity = cart[id] ? cart[id].quantity : 0;\n      inventory =\n        product.inventory > 0 ? product.inventory - 1 : product.inventory;\n\n      return {\n        ...state,\n        products: {\n          ...products,\n          [id]: {\n            ...product,\n            inventory,\n          },\n        },\n        cart: {\n          ...cart,\n          [id]: {\n            id,\n            productName,\n            price,\n            icon,\n            quantity: quantity + 1,\n          },\n        },\n      };\n    case \"CHECKOUT\":\n      console.log(\n        \"Thank you for spending all your money with us, see you soon ðŸ˜‰\"\n      );\n      // Not ready yet\n      return {\n        products: allProductsJson,\n        cart: {},\n      };\n    case \"REMOVE_ONE\":\n      inventory = products[id].inventory;\n      quantity = product.quantity;\n      newCart = { ...cart };\n      delete newCart[id];\n      return {\n        ...state,\n        cart:\n          quantity > 1\n            ? { ...cart, [id]: { ...product, quantity: quantity - 1 } }\n            : newCart,\n        products: {\n          ...products,\n          [id]: {\n            ...product,\n            inventory: inventory + 1,\n          },\n        },\n      };\n    case \"REMOVE_ALL\":\n      inventory = products[id].inventory;\n      quantity = product.quantity;\n      newCart = { ...cart };\n      delete newCart[id];\n      return {\n        ...state,\n        products: {\n          ...products,\n          [id]: {\n            ...product,\n            inventory: inventory + quantity,\n          },\n        },\n        cart: newCart,\n      };\n    case \"EMPTY_CART\":\n      return {\n        products: allProductsJson,\n        cart: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport default allReducers;\n"]},"metadata":{},"sourceType":"module"}