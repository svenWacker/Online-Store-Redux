{"ast":null,"code":"var _jsxFileName = \"/home/dci/app/WebDev/Online-Store-Redux/src/components/ShoppingCart.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { checkout, emptyCart } from \"../actions\";\nimport ShoppingCartItem from \"./ShoppingCartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShoppingCart = props => {\n  const {\n    items,\n    checkout,\n    emptyCart\n  } = props;\n  const itemsInCart = items.map(item => /*#__PURE__*/_jsxDEV(ShoppingCartItem, {\n    item: item\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: itemsInCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total: \\u20AC\", items.reduce((sum, item) => sum + item.price * item.quantity, 0)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: emptyCart,\n        disabled: !items.length,\n        children: \"Empty cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkout,\n        disabled: !items.length,\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ShoppingCart;\n\nconst mapStoreToProps = store => ({\n  items: Object.values(store.cart)\n});\n\nconst mapActionsToProps = {\n  checkout,\n  emptyCart\n};\nexport default connect(mapStoreToProps, mapActionsToProps)(ShoppingCart);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCart\");","map":{"version":3,"sources":["/home/dci/app/WebDev/Online-Store-Redux/src/components/ShoppingCart.js"],"names":["React","Fragment","connect","checkout","emptyCart","ShoppingCartItem","ShoppingCart","props","items","itemsInCart","map","item","id","reduce","sum","price","quantity","length","mapStoreToProps","store","Object","values","cart","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,KAAF;AAASL,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAiCG,KAAvC;AACA,QAAME,WAAW,GAAGD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBAC5B,QAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEA;AAAxB,KAAmCA,IAAI,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,UADkB,CAApB;AAGA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,kCAEGD,KAAK,CAACK,MAAN,CAAa,CAACC,GAAD,EAAMH,IAAN,KAAeG,GAAG,GAAGH,IAAI,CAACI,KAAL,GAAaJ,IAAI,CAACK,QAApD,EAA8D,CAA9D,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEZ,SAAjB;AAA4B,QAAA,QAAQ,EAAE,CAACI,KAAK,CAACS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAEd,QAAjB;AAA2B,QAAA,QAAQ,EAAE,CAACK,KAAK,CAACS,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtBD;;KAAMX,Y;;AAwBN,MAAMY,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,KAAK,EAAEY,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,IAApB;AAD2B,CAAZ,CAAxB;;AAGA,MAAMC,iBAAiB,GAAG;AACxBpB,EAAAA,QADwB;AAExBC,EAAAA;AAFwB,CAA1B;AAIA,eAAeF,OAAO,CAACgB,eAAD,EAAkBK,iBAAlB,CAAP,CAA4CjB,YAA5C,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { checkout, emptyCart } from \"../actions\";\n\nimport ShoppingCartItem from \"./ShoppingCartItem\";\n\nconst ShoppingCart = (props) => {\n  const { items, checkout, emptyCart } = props;\n  const itemsInCart = items.map((item) => (\n    <ShoppingCartItem item={item} key={item.id} />\n  ));\n  return (\n    <Fragment>\n      <ul>{itemsInCart}</ul>\n      <p>\n        Total: â‚¬\n        {items.reduce((sum, item) => sum + item.price * item.quantity, 0)}\n      </p>\n      <div>\n        <button onClick={emptyCart} disabled={!items.length}>\n          Empty cart\n        </button>\n        <button onClick={checkout} disabled={!items.length}>\n          Checkout\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStoreToProps = (store) => ({\n  items: Object.values(store.cart),\n});\nconst mapActionsToProps = {\n  checkout,\n  emptyCart,\n};\nexport default connect(mapStoreToProps, mapActionsToProps)(ShoppingCart);\n"]},"metadata":{},"sourceType":"module"}